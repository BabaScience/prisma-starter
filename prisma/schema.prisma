// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  name           String?
  age            Int?
  role           Role            @default(USER)
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavoritePosts")
  userPreference UserPreference?

  @@unique([name, age])
  @@index([email])
}

model UserPreference {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  theme        String
  emailUpdates Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float?
  content       String
  authorId      String
  favoritedById String?
  categories    Category[]
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Category {
  id         String   @id @default(uuid())
  name       String   @unique
  categoryId String
  posts      Post[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
